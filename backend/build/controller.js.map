{"version":3,"sources":["controller.js"],"names":["async","crawl","sleep","spawn","require","exports","retrieve","req","res","query","params","name","send","result","json","body","results","ner","pythonProcess","text","Object","prototype","toString","call","stdout","on","data","JSON","parse","ms","Promise","resolve","setTimeout","completed","queries","i","len","length","push","mapSeries","callback","wiki","err"],"mappings":"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","sourcesContent":["(function() {\n  'use strict';\n  var async, crawl, sleep, spawn;\n\n  crawl = require('../../crawl/build/crawl.min.js');\n\n  spawn = require(\"child_process\").spawn;\n\n  async = require(\"async\");\n\n  exports.retrieve = function(req, res) {\n    var query;\n    if (!req.params.name) {\n      res.send(\"Wrong input.\");\n      return;\n    }\n    query = {\n      \"name\": `${req.params.name}`,\n      \"description\": {\n        \"label\": \"description\",\n        \"stopword\": true\n      },\n      \"properties\": [\n        {\n          \"name\": \"P19\",\n          \"label\": \"placeofbirth\"\n        },\n        {\n          \"name\": \"P21\",\n          \"label\": \"sex\"\n        },\n        {\n          \"name\": \"P20\",\n          \"label\": \"placeofdeath\"\n        },\n        {\n          \"name\": \"P106\",\n          \"label\": \"occupation\",\n          \"stopword\": true\n        },\n        {\n          \"name\": \"P108\",\n          \"label\": \"employer\",\n          \"stopword\": true,\n          \"unique\": true\n        },\n        {\n          \"name\": \"P463\",\n          \"label\": \"memberof\",\n          \"stopword\": true,\n          \"unique\": true\n        }\n      ],\n      \"limit\": 1000,\n      \"lang\": \"en\",\n      \"flatten\": true,\n      \"unique\": true\n    };\n    crawl.retrieve(query, function(result) {\n      res.json(result.body.results);\n    });\n  };\n\n  exports.ner = function(req, res) {\n    var pythonProcess, text;\n    text = req.query['text'];\n    if (!(text && Object.prototype.toString.call(text) === \"[object String]\")) {\n      res.send(\"Wrong input.\");\n      return;\n    }\n    // python ner\n    pythonProcess = spawn('python3', [\"/home/uno/repos/TextMining/ner/detect-persons.py\", text]);\n    pythonProcess.stdout.on('data', function(data) {\n      data = JSON.parse(data);\n      res.send(data);\n    });\n  };\n\n  sleep = function(ms) {\n    return new Promise(function(resolve) {\n      setTimeout((function() {\n        resolve();\n      }), ms);\n    });\n  };\n\n  exports.parse = function(req, res) {\n    var completed, pythonProcess, queries, result, text;\n    text = req.query['text'];\n    if (!(text && Object.prototype.toString.call(text) === \"[object String]\")) {\n      res.send(\"Wrong input.\");\n      return;\n    }\n    // python ner\n    result = [];\n    queries = [];\n    completed = 0;\n    pythonProcess = spawn('python3', [\"/home/uno/repos/TextMining/ner/detect-persons.py\", text]);\n    return pythonProcess.stdout.on('data', function(data) {\n      var i, len, name;\n      data = JSON.parse(data);\n      for (i = 0, len = data.length; i < len; i++) {\n        name = data[i];\n        queries.push([\n          name,\n          {\n            \"name\": `${name}`,\n            \"description\": {\n              \"label\": \"description\",\n              \"stopword\": true\n            },\n            \"properties\": [\n              {\n                \"name\": \"P19\",\n                \"label\": \"placeofbirth\"\n              },\n              {\n                \"name\": \"P21\",\n                \"label\": \"sex\"\n              },\n              {\n                \"name\": \"P20\",\n                \"label\": \"placeofdeath\"\n              },\n              {\n                \"name\": \"P106\",\n                \"label\": \"occupation\",\n                \"stopword\": true\n              },\n              {\n                \"name\": \"P108\",\n                \"label\": \"employer\",\n                \"stopword\": true,\n                \"unique\": true\n              },\n              {\n                \"name\": \"P463\",\n                \"label\": \"memberof\",\n                \"stopword\": true,\n                \"unique\": true\n              }\n            ],\n            \"limit\": 1000,\n            \"lang\": \"en\",\n            \"flatten\": true,\n            \"unique\": true\n          }\n        ]);\n      }\n      return async.mapSeries(queries, (function(data, callback) {\n        return crawl.retrieve(data[1], function(wiki) {\n          return callback(null, {\n            \"original\": data[0],\n            \"results\": wiki.body.results\n          });\n        });\n      }), function(err, results) {\n        res.json({\n          \"text\": text,\n          \"names\": results\n        });\n      });\n    });\n  };\n\n  \n  // tasks = []\n  // for query in queries\n  //   console.log query\n  //   tasks.push (cb) ->\n  //     crawl.retrieve query, (wiki) ->\n  //       cb(null, wiki.body.results);\n  //     return\n\n  // console.log tasks\n  //# async.series tasks, (err, results) ->\n  //   if err\n  //     return next(err)\n  //   res.json results\n\n  //async.each queries, ((query, callback) ->\n  //  crawl.retrieve query, (wiki) ->\n  //    result.push wiki.body.results\n  //    callback()\n  //    return\n  //), (err) ->\n  //  #If any of the user creation failed may throw error.\n  //  if err\n  //    # One of the iterations produced an error.\n  //    # All processing will now stop.\n  //    console.log 'unable to create user'\n  //  else\n  //    console.log 'All user created successfully'\n  //    res.json result\n  //  return\n  // results : name1,name2,name3  \n\n}).call(this);\n"],"file":"controller.js"}